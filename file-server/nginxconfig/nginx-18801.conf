user  root;  
worker_processes  1;  

#error_log  logs/error.log ;  
#error_log  logs/error.log  notice;  
error_log  /home/tinker/docker/file-server/logs/error-18801.log  info;  

pid        logs/nginx-18801.pid;  

events {  
    worker_connections  1024;  
}  


http {  
    include       /opt/nginx/conf/mime.types;     
    default_type  'dapplication/octet-stream';  
    sendfile        on;  
    keepalive_timeout  65;  
    lua_package_cpath '/opt/luajit/lib/lua/5.1/?.so;;';

    lua_package_path "/opt/lua-resty-upload/lib/?.lua;;";

    server {  
	    server_name localhost file-server;
	    listen 18801;
	    charset utf-8;
	    set $LESSON_ROOT /home/tinker/uploadfiles/;
        client_max_body_size 1024M;

		location /status {
			stub_status on;
        	access_log off;
		}
		location /fileserver/status {
			default_type text/html;
			content_by_lua_file /home/tinker/docker/file-server/status-handle.lua;
	    }

	    location /upload {
	        default_type text/html;
	        content_by_lua_file /home/tinker/docker/file-server/upload-resty.lua;
	    }
	    location /files{  
			default_type  'application/octet-stream';  
			alias /home/tinker/temp/upload/; 
			error_page   415 = /empty;
        }  


		location /img {  
        	#  图片被代理过来以后实际存放的根目录  
        	alias /home/tinker/resize;  
	        set $width 999;  
	        set $height 999;  
	        set $dimens "";  

	         # 请求中带有尺寸的，分离出尺寸，并拼出文件夹名称  
	        if ($uri ~* "^/img_(\d+)x(\d+)/(.*)" ) {  
	            set $width $1;  
	            set $height $2;  
	            set $image_path $3;  
	            set $demins "_$1x$2";  
	        }  
	        if ($uri ~* "^/img/(.*)" ) {  
	            set $image_path $1;  
	        }  

	        # 本地没有找到图片时，调用获取图片并压缩图片的连接  
	        set $image_uri img_filter/$image_path?width=$width&height=$height;  
	          if (!-f $request_filename) {  
	            proxy_pass http://127.0.0.1:80/$image_uri;  
	            break;  
	        }  
	        proxy_store /tmp/nginx/resize$demins/$image_path;  
	        proxy_store_access user:rw group:rw all:rw;  
	        proxy_temp_path /tmp/images;  
	        proxy_set_header Host $host;  

	    }  
    	# 此处为图片实际地址，可以为远程地址  
   		location /img_filter/ {  
            image_filter_buffer 20M;  
            proxy_pass http://127.0.0.1/files/;  
            image_filter resize $arg_width $arg_height;  
            image_filter_jpeg_quality 75;  
            allow 127.0.0.0/8;  
            deny all;  
        }
	
        

        location /delete_files/{
       		content_by_lua_block {
	       		local arg = ngx.req.get_uri_args()
	           	for k,v in pairs(arg) do
	           		if(k == 'img_dir') then
	           			dir = '/home/tinker/temp/upload/'..v
	           			os.execute('rm ' ..dir)
	           		end
	           	end
         	} 
         	
       }

       location /cropimages {  
        	#  图片被代理过来以后实际存放的根目录  
        	alias /home/tinker/cropimages;  
	        set $width 999;  
	        set $height 999;  
	        set $dimens "";  

	         # 请求中带有尺寸的，分离出尺寸，并拼出文件夹名称  
	        if ($uri ~* "^/cropimages_(\d+)x(\d+)/(.*)" ) {  
	            set $width $1;  
	            set $height $2;  
	            set $image_path $3;  
	            set $demins "_$1x$2";  
	        }  
	        if ($uri ~* "^/cropimages/(.*)" ) {  
	            set $image_path $1;  
	        }  

	        # 本地没有找到图片时，调用获取图片并压缩图片的连接  
	        set $image_uri filter_crop/$image_path?width=$width&height=$height;  
	          if (!-f $request_filename) {  
	            proxy_pass http://127.0.0.1:80/$image_uri;  
	            break;  
	        }  
	        proxy_store /tmp/nginx/cropimages$demins/$image_path;  
	        proxy_store_access user:rw group:rw all:rw;  
	        proxy_temp_path /tmp/images;  
	        proxy_set_header Host $host;  

	    }  
    	# 此处为图片实际地址，可以为远程地址  
   		location /filter_crop/ {  
            image_filter_buffer 20M;
            image_filter size;  
            proxy_pass http://127.0.0.1/files/;  
            image_filter crop $arg_width $arg_height;  
            image_filter_jpeg_quality 75;  
            allow 127.0.0.0/8;  
            deny all;  
        }


		location /cmt/service/size_images/{  
            proxy_pass http://127.0.0.1/files/;
            image_filter size; 
        }

        location = /empty {
    		empty_gif;
		} 


		location /cmt {
            alias   /home/tinker/docker/file-server/cmt-static;
            index welcome.html;
        }
		location /cmt/service {
            proxy_pass   http://127.0.0.1:21999/service;
        }
		location /cmt/service/image/upload {
            proxy_pass   http://127.0.0.1/upload;
        }
		location /cmt/view/filestore {
			proxy_pass   http://127.0.0.1/files;
        }
		location /cmt/view/imagestore {
            proxy_pass  http://127.0.0.1/img;
        }
        location /cmt/pdf {
            proxy_pass   http://127.0.0.1:21999/pdf;
        }
	     location /cmt/service/image/savesize {
	        proxy_pass   http://127.0.0.1/size_images;
	    }
	    location /cmt/service/image/deletefiles {
			proxy_pass   http://127.0.0.1/delete_files;
		}
	}
}
